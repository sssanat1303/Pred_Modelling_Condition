WWT_prior <- WWT_prior %>% select(-POSITION)
WWT_prior <- WWT_prior %>% select(-STATUS)
WWT_prior <- WWT_prior %>% select(-LINING)
WWT_prior <- WWT_prior %>% select(-US_INV)
WWT_prior <- WWT_prior %>% select(-DS_INV)
WWT_prior <- WWT_prior %>% select(-ACCURACY)
WWT_prior <- WWT_prior %>% select(-TYPE)
WWT_prior <- WWT_prior %>% select(-SERVICE)
WWT_prior <- WWT_prior %>% select(-DATASOURCE)
WWT_prior <- WWT_prior %>% select(-SUBTYPE)
WWT_prior <- WWT_prior %>% select(-FLOWDIR)
WWT_prior <- WWT_prior %>% select(-FLOWDIRACC)
WWT_prior <- WWT_prior %>% select(-HACOMPKEY)
WWT_prior <- WWT_prior %>% select(-R_STAT)
WWT_prior <- WWT_prior %>% select(-R_MAT)
WWT_prior <- WWT_prior %>% select(-R_DIA)
WWT_prior <- WWT_prior %>% select(-R_INST)
WWT_prior <- WWT_prior %>% select(-AQ_TYPE)
WWT_prior <- WWT_prior %>% select(-USE_AREA)
WWT_prior <- WWT_prior %>% select(-HAUNITTYPE)
WWT_prior <- WWT_prior %>% select(-USE_AREAID)
WWT_prior <- WWT_prior %>% select(-R_OWN)
WWT_prior <- WWT_prior %>% select(-OWN)
WWT_prior <- WWT_prior %>% select(-PARLINENO)
WWT_prior <- WWT_prior %>% select(-F_IwiAOI)
WWT_prior <- WWT_prior %>% select(-`New action`)
# Need to fix data types for certain columns/Need to fix and normalise some entries
WWT_prior <- WWT_prior %>%
mutate(across(where(is.character), as.factor))
WWT_prior$condition_CCTV_score <- as.numeric(WWT_prior$condition_CCTV_score)
WWT_prior$condition_overall_score_label <- as.factor(WWT_prior$condition_overall_score_label)
levels(WWT_prior$condition_CCTV_source) <- c(levels(WWT_prior$condition_CCTV_source), "None")
WWT_prior$condition_CCTV_source[is.na(WWT_prior$condition_CCTV_source)] <- "None"
WWT_prior$condition_CCTV_date <- as.factor(WWT_prior$condition_CCTV_date)
levels(WWT_prior$condition_CCTV_date) <- c(levels(WWT_prior$condition_CCTV_date), "None")
WWT_prior$condition_CCTV_date[is.na(WWT_prior$condition_CCTV_date)] <- "None"
WWT_prior$condition_CCTV_score <- as.factor(WWT_prior$condition_CCTV_score)
levels(WWT_prior$condition_CCTV_score) <- c(levels(WWT_prior$condition_CCTV_score), "None")
WWT_prior$condition_CCTV_score[is.na(WWT_prior$condition_CCTV_score)] <- "None"
WWT_prior$INSTALLED <- format(WWT_prior$INSTALLED, "%Y")
WWT_prior$INSTALLED <- as.numeric(WWT_prior$INSTALLED)
# Creating modelling data set and analysis data set
WWT.analysis <- WWT_prior
WWT.analysis <- WWT.analysis %>% select(-SHAPE_Length)
WWT.modelling <- WWT_prior
WWT.modelling <- WWT.modelling %>% select(-condition_overall_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_overall_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_overall_score_label)
WWT.modelling <- WWT.modelling %>% select(-criticality_operational_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_pipe_type_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_people_impacts_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_people_impacts_dataset_s_)
WWT.modelling <- WWT.modelling %>% select(-criticality_environmental_impacts_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_environmental_impacts_dataset_s_)
WWT.modelling <- WWT.modelling %>% select(-criticality_infiltration_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_impact_of_failure_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_flow_ratio)
WWT.modelling <- WWT.modelling %>% select(-criticality_confidence_scenario)
WWT.modelling <- WWT.modelling %>% select(-condition_confidence_scenario)
WWT.modelling <- WWT.modelling %>% select(-`Risk-score`)
write.csv(WWT.modelling, "Pred_Modelling_Condition/WWT_prior/WWT.modelling.csv", row.names = FALSE)
library(ggplot2)
library(tidyverse)
library(readxl)
library(lubridate)
library(corrplot)
library(naniar)
WWT_prior <- read_xlsx("C:/Users/SSabharwal/OneDrive - Watercare Services Limited/Pred_Modelling_Condition/WWT_prior/WWT_prioritisation_final.xlsx")
# Getting rid of useless columns
WWT_prior <- WWT_prior %>% select(-GIS_ID)
WWT_prior <- WWT_prior %>% select(-OBJECTID)
WWT_prior <- WWT_prior %>% select(-WSL_OBJECTID)
WWT_prior <- WWT_prior %>% select(-EQUIP_ID)
WWT_prior <- WWT_prior %>% select(-COMPKEY)
WWT_prior <- WWT_prior %>% select(-FAC_CODE)
WWT_prior <- WWT_prior %>% select(-FAC_DESC)
WWT_prior <- WWT_prior %>% select(-PROCESS)
WWT_prior <- WWT_prior %>% select(-GRP)
WWT_prior <- WWT_prior %>% select(-POSITION)
WWT_prior <- WWT_prior %>% select(-STATUS)
WWT_prior <- WWT_prior %>% select(-LINING)
WWT_prior <- WWT_prior %>% select(-US_INV)
WWT_prior <- WWT_prior %>% select(-DS_INV)
WWT_prior <- WWT_prior %>% select(-ACCURACY)
WWT_prior <- WWT_prior %>% select(-TYPE)
WWT_prior <- WWT_prior %>% select(-SERVICE)
WWT_prior <- WWT_prior %>% select(-DATASOURCE)
WWT_prior <- WWT_prior %>% select(-SUBTYPE)
WWT_prior <- WWT_prior %>% select(-FLOWDIR)
WWT_prior <- WWT_prior %>% select(-FLOWDIRACC)
WWT_prior <- WWT_prior %>% select(-HACOMPKEY)
WWT_prior <- WWT_prior %>% select(-R_STAT)
WWT_prior <- WWT_prior %>% select(-R_MAT)
WWT_prior <- WWT_prior %>% select(-R_DIA)
WWT_prior <- WWT_prior %>% select(-R_INST)
WWT_prior <- WWT_prior %>% select(-AQ_TYPE)
WWT_prior <- WWT_prior %>% select(-USE_AREA)
WWT_prior <- WWT_prior %>% select(-HAUNITTYPE)
WWT_prior <- WWT_prior %>% select(-USE_AREAID)
WWT_prior <- WWT_prior %>% select(-R_OWN)
WWT_prior <- WWT_prior %>% select(-OWN)
WWT_prior <- WWT_prior %>% select(-PARLINENO)
WWT_prior <- WWT_prior %>% select(-F_IwiAOI)
WWT_prior <- WWT_prior %>% select(-`New action`)
# Need to fix data types for certain columns/Need to fix and normalise some entries
WWT_prior <- WWT_prior %>%
mutate(across(where(is.character), as.factor))
WWT_prior$condition_CCTV_score <- as.numeric(WWT_prior$condition_CCTV_score)
WWT_prior$condition_overall_score_label <- as.factor(WWT_prior$condition_overall_score_label)
levels(WWT_prior$condition_CCTV_source) <- c(levels(WWT_prior$condition_CCTV_source), "None")
WWT_prior$condition_CCTV_source[is.na(WWT_prior$condition_CCTV_source)] <- "None"
WWT_prior$condition_CCTV_date <- as.factor(WWT_prior$condition_CCTV_date)
levels(WWT_prior$condition_CCTV_date) <- c(levels(WWT_prior$condition_CCTV_date), "None")
WWT_prior$condition_CCTV_date[is.na(WWT_prior$condition_CCTV_date)] <- "None"
WWT_prior$condition_CCTV_score <- as.factor(WWT_prior$condition_CCTV_score)
levels(WWT_prior$condition_CCTV_score) <- c(levels(WWT_prior$condition_CCTV_score), "None")
WWT_prior$condition_CCTV_score[is.na(WWT_prior$condition_CCTV_score)] <- "None"
WWT_prior$INSTALLED <- format(WWT_prior$INSTALLED, "%Y")
WWT_prior$INSTALLED <- as.numeric(WWT_prior$INSTALLED)
# Creating modelling data set and analysis data set
WWT.analysis <- WWT_prior
WWT.analysis <- WWT.analysis %>% select(-SHAPE_Length)
WWT.modelling <- WWT_prior
WWT.modelling <- WWT.modelling %>% select(-condition_overall_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_overall_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_overall_score_label)
WWT.modelling <- WWT.modelling %>% select(-criticality_operational_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_pipe_type_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_people_impacts_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_people_impacts_dataset_s_)
WWT.modelling <- WWT.modelling %>% select(-criticality_environmental_impacts_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_environmental_impacts_dataset_s_)
WWT.modelling <- WWT.modelling %>% select(-criticality_infiltration_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_impact_of_failure_score)
WWT.modelling <- WWT.modelling %>% select(-criticality_flow_ratio)
WWT.modelling <- WWT.modelling %>% select(-criticality_confidence_scenario)
WWT.modelling <- WWT.modelling %>% select(-condition_confidence_scenario)
WWT.modelling <- WWT.modelling %>% select(-`Risk-score`)
write.csv(WWT.modelling, "WWT.modelling.csv", row.names = FALSE)
write.csv(WWT.analysis,"WWT.analysis.csv", row.names = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(ggplot2)
library(tidyverse)
library(readxl)
library(lubridate)
library(corrplot)
library(naniar)
library(keras)
library(glmnet)
library(xgboost)
library(finalfit)
library(rpart)
library(MASS)
library(ranger)
WWT.modelling <- read_csv("WWT.modelling.csv")
View(WWT.modelling)
WWT.modelling <- WWT.modelling[c("condition_overall_score_label", setdiff(names(WWT.modelling), "condition_overall_score_label"))] # nolint
str(WWT.modelling)
library(ggplot2)
library(tidyverse)
library(readxl)
library(lubridate)
library(corrplot)
library(naniar)
library(keras)
library(glmnet)
library(xgboost)
library(finalfit)
library(rpart)
library(MASS)
library(ranger)
WWT.modelling <- read_csv("WWT.modelling.csv")
WWT.modelling <- WWT.modelling %>% mutate_if(is.character, as.factor)
WWT.modelling$condition_overall_score_label <- as.factor(WWT.modelling$condition_overall_score_label)
str(WWT.modelling)
WWT.modelling <- WWT.modelling[c("condition_overall_score_label", setdiff(names(WWT.modelling), "condition_overall_score_label"))] # nolint
WWT.yes <- WWT.modelling %>% filter(condition_CCTV_app_availability == "yes")
WWT.no <- WWT.modelling %>% filter(condition_CCTV_app_availability == "no")
missing_plot(WWT.yes)
missing_plot(WWT.no)
WWT.yes <- WWT.yes[, -9]
WWT.no <- WWT.no[, -9]
summary(WWT.modelling$condition_overall_score_label)
summary(WWT.yes$condition_overall_score_label)
summary(WWT.no$condition_overall_score_label)
set.seed(123)
rows_to_move <- which(WWT.no$condition_overall_score_label == "5")
num_to_select <- min(10, length(rows_to_move))
selected_rows <- sample(rows_to_move, num_to_select)
WWT.yes <- WWT.yes %>% rbind(WWT.no[selected_rows, ])
WWT.no <- WWT.no[-selected_rows,]
summary(WWT.yes$condition_overall_score_label)
summary(WWT.no$condition_overall_score_label)
set.seed(749)
sample.index <- sample(1:nrow(WWT.yes), size = 0.8 * nrow(WWT.yes))
WWT.yes.train <- WWT.yes[sample.index, ]
WWT.yes.test <- WWT.yes[-sample.index, ]
condition.tree1 <- rpart(condition_overall_score_label~., data = WWT.yes.train)
plotcp(condition.tree1)
predict1 <- predict(condition.tree1, WWT.yes.test, type = "class")
confMatrix1 <- table(Actual = WWT.yes.test$condition_overall_score_label, Predicted = predict1)
confMatrix1
sum(diag(confMatrix1)) / nrow(WWT.yes.test)
plot(condition.tree1, margin = 0.02)
text(condition.tree1, pretty = 2)
printcp(condition.tree1)
condition.tree2 <- rpart(condition_overall_score_label~., data = WWT.yes.train, cp =0.028751)
plotcp(condition.tree2)
predict2 <- predict(condition.tree2, WWT.yes.test, type = "response")
condition.tree2 <- rpart(condition_overall_score_label~., data = WWT.yes.train, cp =0.028751)
plotcp(condition.tree2)
predict2 <- predict(condition.tree2, WWT.yes.test, type = "class")
confMatrix2 <- table(Actual = WWT.yes.test$condition_overall_score_label, Predicted = predict2)
confMatrix2
sum(diag(confMatrix2)) / nrow(WWT.yes.test)
plot(condition.tree2)
predict3 <- predict(condition.tree2, WWT.no, type = "class")
confMatrix3 <- table(Actual = WWT.no$condition_overall_score_label, Predicted = predict3)
confMatrix3
sum(diag(confMatrix3)) / nrow(WWT.no)
rf_model <- ranger(condition_overall_score_label ~ ., data = WWT.yes.train, trees = 10000, mtry = 5)
predict4 <- predict(rf_model, WWT.yes.test)$predictions
confMatrix4 <- table(Actual = WWT.yes.test$condition_overall_score_label, Predicted = predict4)
confMatrix4
sum(diag(confMatrix4)) / nrow(WWT.yes.test)
predict5 <- predict(rf_model, WWT.no)$predictions
confMatrix5 <- table(Actual = WWT.no$condition_overall_score_label, Predicted = predict5)
confMatrix5
sum(diag(confMatrix5)) / nrow(WWT.no)
# Convert data frames to matricies and make data and label sets
library(gbm)
WWT.yes.train.matrix <- model.matrix(~. - 1, WWT.yes.train[, -1])
WWT.yes.train.label <- as.integer(WWT.yes.train$condition_overall_score_label) - 1
WWT.yes.test.matrix <- model.matrix(~. -1 , WWT.yes.test[,-1])
WWT.yes.test.label <- as.integer(WWT.yes.test$condition_overall_score_label) -1
WWT.no <- na.omit(WWT.no)
WWT.no.matrix <- model.matrix(~. -1 , WWT.no[,-1])
WWT.no.label <- as.integer(WWT.no$condition_overall_score_label) -1
boosted.conditiontree1 <- xgboost(data = WWT.yes.train.matrix, label = WWT.yes.train.label, max_depth = 10, eta = 1, nthreads = 2, nrounds = 50, num_class = 6, objective = "multi:softmax", verbose = 1 )
xgb.plot.tree(model = boosted.conditiontree1)
pred6 <- predict(boosted.conditiontree1, WWT.yes.test.matrix)
confMatrix6 <- table(Actual = WWT.yes.test.label,
Predicted = pred6)
confMatrix6
sum(diag(confMatrix6)) / nrow(WWT.yes.test.matrix)
pred7 <- predict(boosted.conditiontree1, WWT.no.matrix)
confMatrix7 <- table(Actual = WWT.no.label,
Predicted = pred7)
confMatrix7
sum(diag(confMatrix7)) / length(WWT.no.label)
library(finalfit)
library(ggplot2)
library(tidyverse)
library(readxl)
library(lubridate)
library(corrplot)
library(naniar)
library(keras)
library(glmnet)
library(xgboost)
library(finalfit)
library(rpart)
library(MASS)
library(ranger)
WWT_prior <- read_csv("WWT.analysis.csv")
WWT_prior %>% missing_plot()
ggplot(WWT_prior, aes(x = MATERIAL, y = condition_overall_score, fill = MATERIAL)) + geom_boxplot() + labs(
title = "Relationship between Material and Condition",
x = "Material",
y = "Condition Score"
)
ggplot(WWT_prior, aes(x = INSTALLED_YEAR, y = condition_overall_score, color = MATERIAL)) + geom_point() + labs(
x = "Year of installation",
y = "Condition Score",
title = "Relationship between the installation year of the pipe and it's condition"
)
ggplot(WWT_prior, aes(x = INSTALLED, y = condition_overall_score, color = MATERIAL)) + geom_point() + labs(
x = "Year of installation",
y = "Condition Score",
title = "Relationship between the installation year of the pipe and it's condition"
)
WWT_prior <- WWT_prior %>%
mutate(age = 2024 - INSTALLED)
ggplot(WWT_prior, aes(x = age, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "lm", col = "blue") + labs(
x = "Age of pipe",
y = "Condition Score",
title = "Relationship between the age of the pipe and it's condition"
)
ggplot(WWT_prior, aes(x = NOM_DIA_MM, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "gam", col = "blue") + labs(
x = "Nominal Diameter of Pipe",
y = "Condition Score",
title = "Relationship between nominal diameter of the pipe and it's condition"
) +  xlim(0, 1500)
ggplot(WWT_prior, aes(x = LENGTH, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "lm", col = "blue")+ labs(
x = "Length of pipe",
y = "Condition Score",
title = "Relationship between the length of the pipe and it's condition"
) + xlim(0, 1000)
ggplot(WWT_prior, aes(x = condition_overall_score)) + geom_histogram() + labs(x = "Distribution of condtion across our wastewater local network")
ggplot(WWT_prior, aes(x = LINING, y = condition_overall_score, fill = LINING)) + geom_boxplot() + labs(
title = "Relationship between Pipe Lining and Condition",
x = "Pipe Lining",
y = "Condition Score"
)
ggplot(WWT_prior, aes(x = criticality_overall_score, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "lm", col = "blue") + labs(
x = "Criticality",
y = "Condition",
title = "Relationship between Crticality and Condition"
)
ggplot(WWT_prior, aes(x = condition_CCTV_app_availability, y = condition_overall_score)) + geom_violin() + labs(
title = "Relationship between the availability of CCTV and Condition",
x = "CCTV availability",
y = "Condition Score"
) + theme_minimal()
ggplot(WWT_prior, aes(x = condition_CCTV_score, y = condition_overall_score)) + geom_jitter(width = 0.2, height = 0.2, alpha = 0.6)
library(ggcorrplot)
WWT_prior_numeric <- WWT_prior %>% select_if(is.numeric)
WWT_prior_numeric <- WWT_prior_numeric %>% select(-OBJECTID)
library(ggcorrplot)
WWT_prior_numeric <- WWT_prior %>% select_if(is.numeric)
good.names <- WWT_prior_numeric %>%
rename(Diameter = NOM_DIA_MM, Cond = condition_overall_score,
Cond_Label = condition_overall_score_label, Cond_CCTV = condition_CCTV_score, CCTV_Date = condition_CCTV_date, Cond_Instability = condition_instability_score, Cond_Corros = condition_corrosivity_score, Cond_Age = condition_age_score, Criticality = criticality_overall_score,
Criticality_Label = criticality_overall_score_label, Criticality_Ops = criticality_operational_score, Criticality_Pipe = criticality_pipe_type_score, Criticality_People = criticality_people_impacts_score, Criticality_Enviro = criticality_environmental_impacts_score, Criticality_Failure = criticality_impact_of_failure_score, Criticality_Infil = criticality_infiltration_score, Criticality_Flow = criticality_flow_ratio,
Risk = `Risk-score`)
View(WWT.analysis)
library(ggcorrplot)
WWT_prior_numeric <- WWT_prior %>% select_if(is.numeric)
good.names <- WWT_prior_numeric %>%
rename(Diameter = NOM_DIA_MM, Cond = condition_overall_score,
Cond_Label = condition_overall_score_label, CCTV_Date = condition_CCTV_date, Cond_Instability = condition_instability_score, Cond_Corros = condition_corrosivity_score, Cond_Age = condition_age_score, Criticality = criticality_overall_score,
Criticality_Label = criticality_overall_score_label, Criticality_Ops = criticality_operational_score, Criticality_Pipe = criticality_pipe_type_score, Criticality_People = criticality_people_impacts_score, Criticality_Enviro = criticality_environmental_impacts_score, Criticality_Failure = criticality_impact_of_failure_score, Criticality_Infil = criticality_infiltration_score, Criticality_Flow = criticality_flow_ratio,
Risk = `Risk-score`)
library(finalfit)
library(ggplot2)
library(tidyverse)
library(readxl)
library(lubridate)
library(corrplot)
library(naniar)
library(keras)
library(glmnet)
library(xgboost)
library(finalfit)
library(rpart)
library(MASS)
library(ranger)
WWT.analysis <- read_csv("WWT.analysis.csv")
WWT.analysis %>% missing_plot()
ggplot(WWT.analysis, aes(x = MATERIAL, y = condition_overall_score, fill = MATERIAL)) + geom_boxplot() + labs(
title = "Relationship between Material and Condition",
x = "Material",
y = "Condition Score"
)
ggplot(WWT.analysis, aes(x = INSTALLED, y = condition_overall_score, color = MATERIAL)) + geom_point() + labs(
x = "Year of installation",
y = "Condition Score",
title = "Relationship between the installation year of the pipe and it's condition"
)
WWT.analysis <- WWT.analysis %>%
mutate(age = 2024 - INSTALLED)
ggplot(WWT.analysis, aes(x = age, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "lm", col = "blue") + labs(
x = "Age of pipe",
y = "Condition Score",
title = "Relationship between the age of the pipe and it's condition"
)
ggplot(WWT.analysis, aes(x = NOM_DIA_MM, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "gam", col = "blue") + labs(
x = "Nominal Diameter of Pipe",
y = "Condition Score",
title = "Relationship between nominal diameter of the pipe and it's condition"
) +  xlim(0, 1500)
ggplot(WWT.analysis, aes(x = LENGTH, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "lm", col = "blue")+ labs(
x = "Length of pipe",
y = "Condition Score",
title = "Relationship between the length of the pipe and it's condition"
) + xlim(0, 1000)
ggplot(WWT.analysis, aes(x = condition_overall_score)) + geom_histogram() + labs(x = "Distribution of condtion across our wastewater local network")
ggplot(WWT.analysis, aes(x = criticality_overall_score, y = condition_overall_score, color = MATERIAL)) + geom_point() + geom_smooth(method = "lm", col = "blue") + labs(
x = "Criticality",
y = "Condition",
title = "Relationship between Crticality and Condition"
)
ggplot(WWT.analysis, aes(x = condition_CCTV_app_availability, y = condition_overall_score)) + geom_violin() + labs(
title = "Relationship between the availability of CCTV and Condition",
x = "CCTV availability",
y = "Condition Score"
) + theme_minimal()
ggplot(WWT.analysis, aes(x = condition_CCTV_score, y = condition_overall_score)) + geom_jitter(width = 0.2, height = 0.2, alpha = 0.6)
library(ggcorrplot)
WWT.analysis.numeric <- WWT.analysis %>% select_if(is.numeric)
good.names <- WWT.analysis.numeric %>%
rename(Diameter = NOM_DIA_MM, Cond = condition_overall_score,
Cond_Label = condition_overall_score_label, Cond_CCTV = condition_CCTV_score, CCTV_Date = condition_CCTV_date, Cond_Instability = condition_instability_score, Cond_Corros = condition_corrosivity_score, Cond_Age = condition_age_score, Criticality = criticality_overall_score,
Criticality_Label = criticality_overall_score_label, Criticality_Ops = criticality_operational_score, Criticality_Pipe = criticality_pipe_type_score, Criticality_People = criticality_people_impacts_score, Criticality_Enviro = criticality_environmental_impacts_score, Criticality_Failure = criticality_impact_of_failure_score, Criticality_Infil = criticality_infiltration_score, Criticality_Flow = criticality_flow_ratio,
Risk = `Risk-score`)
View(WWT.analysis.numeric)
library(ggcorrplot)
WWT.analysis.numeric <- WWT.analysis %>% select_if(is.numeric)
good.names <- WWT.analysis.numeric %>%
rename(
Diameter = `NOM_DIA_MM`,
Cond = `condition_overall_score`,
Cond_Label = `condition_overall_score_label`,
Cond_CCTV = `condition_CCTV_score`,
CCTV_Date = `condition_CCTV_date`,
Cond_Instability = `condition_instability_score`,
Cond_Corros = `condition_corrosivity_score`,
Cond_Age = `condition_age_score`,
Criticality = `criticality_overall_score`,
Criticality_Label = `criticality_overall_score_label`,
Criticality_Ops = `criticality_operational_score`,
Criticality_Pipe = `criticality_pipe_type_score`,
Criticality_People = `criticality_people_impacts_score`,
Criticality_Enviro = `criticality_environmental_impacts_score`,
Criticality_Failure = `criticality_impact_of_failure_score`,
Criticality_Infil = `criticality_infiltration_score`,
Criticality_Flow = `criticality_flow_ratio`,
Risk = `Risk-score`
)
View(WWT.analysis.numeric)
library(ggcorrplot)
WWT.analysis.numeric <- WWT.analysis %>% select_if(is.numeric)
good.names <- WWT.analysis.numeric %>%
rename(
Diameter = `NOM_DIA_MM`,
Cond_Label = `condition_overall_score_label`,
Cond_CCTV = `condition_CCTV_score`,
CCTV_Date = `condition_CCTV_date`,
Cond_Instability = `condition_instability_score`,
Cond_Corros = `condition_corrosivity_score`,
Cond_Age = `condition_age_score`,
Criticality = `criticality_overall_score`,
Criticality_Label = `criticality_overall_score_label`,
Criticality_Ops = `criticality_operational_score`,
Criticality_Pipe = `criticality_pipe_type_score`,
Criticality_People = `criticality_people_impacts_score`,
Criticality_Enviro = `criticality_environmental_impacts_score`,
Criticality_Failure = `criticality_impact_of_failure_score`,
Criticality_Infil = `criticality_infiltration_score`,
Criticality_Flow = `criticality_flow_ratio`,
Risk = `Risk-score`
)
library(ggcorrplot)
WWT.analysis.numeric <- WWT.analysis %>% select_if(is.numeric)
good.names <- WWT.analysis.numeric %>%
rename(
Diameter = `NOM_DIA_MM`,
Cond = `condition_overall_score`,
Cond_Label = `condition_overall_score_label`,
CCTV_Date = `condition_CCTV_date`,
Cond_Instability = `condition_instability_score`,
Cond_Corros = `condition_corrosivity_score`,
Cond_Age = `condition_age_score`,
Criticality = `criticality_overall_score`,
Criticality_Label = `criticality_overall_score_label`,
Criticality_Ops = `criticality_operational_score`,
Criticality_Pipe = `criticality_pipe_type_score`,
Criticality_People = `criticality_people_impacts_score`,
Criticality_Enviro = `criticality_environmental_impacts_score`,
Criticality_Failure = `criticality_impact_of_failure_score`,
Criticality_Infil = `criticality_infiltration_score`,
Criticality_Flow = `criticality_flow_ratio`,
Risk = `Risk-score`
)
View(WWT.analysis)
str(WWT.analysis)
library(ggcorrplot)
WWT.analysis.numeric <- WWT.analysis %>% select_if(is.numeric)
good.names <- WWT.analysis.numeric %>%
rename(
Diameter = `NOM_DIA_MM`,
Cond = `condition_overall_score`,
Cond_Label = `condition_overall_score_label`,
Cond_Instability = `condition_instability_score`,
Cond_Corros = `condition_corrosivity_score`,
Cond_Age = `condition_age_score`,
Criticality = `criticality_overall_score`,
Criticality_Label = `criticality_overall_score_label`,
Criticality_Ops = `criticality_operational_score`,
Criticality_Pipe = `criticality_pipe_type_score`,
Criticality_People = `criticality_people_impacts_score`,
Criticality_Enviro = `criticality_environmental_impacts_score`,
Criticality_Failure = `criticality_impact_of_failure_score`,
Criticality_Infil = `criticality_infiltration_score`,
Criticality_Flow = `criticality_flow_ratio`,
Risk = `Risk-score`
)
#### Run Correlation ####
good.corr <- cor(good.names)
#### Replot ####
p <- ggcorrplot::ggcorrplot(good.corr,
type = "lower")
p + theme(
axis.text.x = element_text(angle = 90, hjust = 1))
library(ggplot2)
library(tidyverse)
library(readxl)
library(lubridate)
library(corrplot)
library(naniar)
WT_prior <- read_xlsx("C:/Users/SSabharwal/OneDrive - Watercare Services Limited/Pred_Modelling_Condition/WT_prior/WT_prioritisation_final.xlsx")
# Cleaning out columns and variables that are not needed
WT_prior <- WT_prior %>% select(-OBJECTID)
library(ggplot2)
library(tidyverse)
library(readxl)
library(lubridate)
library(corrplot)
library(naniar)
WT_prior <- read_xlsx("C:/Users/SSabharwal/OneDrive - Watercare Services Limited/Pred_Modelling_Condition/WT_prior/WT_prioritisation_final.xlsx")
# Cleaning out columns and variables that are not needed
WT_prior <- WT_prior %>% select(-OBJECTID)
